# --- upstreams ---
<% config.all_upstreams.each do |u| %>
  upstream <%= u.name %> {
    <% u.dest.each do |p| %>
      server <%= p %>;
    <% end %>
    keepalive 16;
  }
<% end %>

# --- convert HTTP Header ---
map $http_x_forwarded_proto $xfp {
  default $http_x_forwarded_proto;
  "" $scheme;
}

map $http_connection $conn {
  default keep-alive;        # for HTTP keepalive
  upgrade upgrade;           # for WebSocket
}

# --- server definitions for plain HTTP ---
server {
    server_name  <%= config.domain %>;
    listen       80;

    location ^~ /.well-known/acme-challenge/ {
       root /var/www/letsencrypt;
    }

    location / {
       return 301   https://$host$request_uri;
    }
}

# --- server definitions for HTTPS ---
server {
    server_name  <%= config.domain %>;
    listen       443 ssl http2;
  <% if config.cert_file %>
    ssl_certificate      <%= config.cert_file %>;
    ssl_certificate_key  <%= config.key_file %>;
  <% else %>
    ssl_certificate      /etc/letsencrypt/live/<%= config.domain %>/fullchain.pem;
    ssl_certificate_key  /etc/letsencrypt/live/<%= config.domain %>/privkey.pem;
  <% end %>

    <%= config.get_nginx_config %>

 <% config.locations.each do |loc, upstreams| %>
    <% loc ||= '/' %>
    location <%= loc %> {
        <%= config.get_nginx_config loc %>

    <% if !upstreams.empty? %>
        # --- remote ip filters ---
        set $target_upstream "<%= upstreams.last.name %>";
     <% upstreams.select(&:from_ips).each do |u| %>
      <% u.from_ips.each do |ip| %>
        if ($remote_addr = '<%=ip%>') {
          set $target_upstream '<%= u.name %>';
        }
      <% end %>
     <% end %>

        error_log /var/log/nginx/error_<%= config.normalized_domain %>.log;
        access_log /var/log/nginx/access_<%= config.normalized_domain %>.log main;
     <% if config.upstream_log %>
        access_log /var/log/nginx/upstream_<%= config.normalized_domain %>.log upstream;
     <% end %>

     <% if upstreams.grpc? %>
        grpc_set_header X-Real-IP $remote_addr;
        grpc_set_header Host $http_host;
        grpc_set_header X-Request-ID $request_id;
        grpc_pass $target_upstream;
     <% else %>
        proxy_http_version 1.1;
        # for WebSocket
        proxy_set_header Upgrade $http_upgrade;
        proxy_set_header Connection $conn;

        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-Proto $xfp;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header Host $http_host;
        proxy_set_header X-Request-ID $request_id;
        proxy_pass http://$target_upstream;
     <% end %>
    <% end %>
    }
 <% end %>
}
